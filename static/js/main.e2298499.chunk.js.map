{"version":3,"sources":["minimal.bitsy","App.js","index.js"],"names":["module","exports","__webpack_require__","p","ReactGA","initialize","pageview","window","location","pathname","search","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","original","converted","handleCodeChange","bind","assertThisInitialized","fetch","exampleSource","then","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","data","code","wrap","_context","prev","next","text","sent","stop","_x","apply","arguments","_ref2","setState","stringify","parseWorld","maxLength","_this2","react_default","createElement","className","AppBar","position","Toolbar","Typography","variant","Grid","container","spacing","style","margin","width","item","xs","Paper","direction","alignItems","Info_default","ArrowDownward_default","lib_default","value","onValueChange","highlight","languages","clike","padding","fontFamily","fontSize","json","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e2298499.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/minimal.c46ce57f.bitsy\";","import React, { Component } from 'react';\nimport './App.css';\nimport './prism.css';\n\nimport { Grid, AppBar, Toolbar, Typography, Paper } from '@material-ui/core';\n\nimport InfoIcon from '@material-ui/icons/Info';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-json';\n\nimport {parseWorld} from 'bitsy-parser';\nimport stringify from 'json-stringify-pretty-compact';\n\nimport exampleSource from './minimal.bitsy';\n\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('UA-130174335-4');\nReactGA.pageview(window.location.pathname + window.location.search)\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      original: 'Loading, please wait...',\n      converted: ''\n    };\n    \n    this.handleCodeChange = this.handleCodeChange.bind(this);\n    \n    fetch(exampleSource).then(async (data) => {\n      const code = await data.text();\n      this.handleCodeChange({ code });\n    });\n  }\n  \n  handleCodeChange({ code }) {\n    this.setState({\n      original: code,\n      converted: stringify(parseWorld(code), {maxLength: 160})\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n      \n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">\n            Bitsy Converter\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      \n      <Grid container spacing={3}  style={{ margin: 0, width: '100%' }}>\n          <Grid item xs={6}>\n            <Paper>\n      \n              <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                  <InfoIcon /> \n                </Grid>\n                <Grid item>\n                  Paste your bitsy code here.\n                </Grid>\n                <Grid item>\n                  <ArrowDownwardIcon />\n                </Grid>\n              </Grid>\n      \n              <Editor\n                value={this.state.original}\n                onValueChange={code => this.handleCodeChange({ code })}\n                highlight={code => highlight(code, languages.clike)}\n                padding={10}\n                style={{\n                  fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                  fontSize: 12,\n                }}\n              />\n\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper>\n            \n              <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                  <InfoIcon /> \n                </Grid>\n                <Grid item>\n                  The converted code will be generated here.\n                </Grid>\n                <Grid item>\n                  <ArrowDownwardIcon />\n                </Grid>\n              </Grid>\n\n              <Editor\n                value={this.state.converted}\n                onValueChange={code => this.handleCodeChange({ code })}\n                highlight={code => highlight(code, languages.json)}\n                padding={10}\n                style={{\n                  fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                  fontSize: 12,\n                }}\n              />\n                \n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}